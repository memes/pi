# These github actions will perform linting using pre-commit.
# yamllint disable rule:line-length
# spell-checker: disable
---
name: pre-commit

# yamllint disable-line rule:truthy
on:
  pull_request:
  push:
    branches: [main]

permissions:
  contents: read
  pull-requests: read

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Install talisman
        run: |
          sudo curl -sLo /usr/local/bin/talisman https://github.com/thoughtworks/talisman/releases/download/v1.28.0/talisman_linux_amd64
          sudo chmod 0755 /usr/local/bin/talisman
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Execute pre-commit
        uses: pre-commit/action@v3.0.0
  hadolint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Execute hadolint
        uses: hadolint/hadolint-action@v2.1.0
        with:
          dockerfile: "Dockerfile"
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Execute linter
        uses: golangci/golangci-lint-action@v3.2.0
        with:
          version: latest
          args: ./v2/...
  go-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Cache packages
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('v2/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run go tests
        run: go test -v -short ./v2/...
